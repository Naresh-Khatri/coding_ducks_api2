generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model feedbacks {
// id           Int     @id @default(autoincrement())
// ui           Int
//   difficulty   Int
//   usefulness   Int
//   overall      Int
//   future_event Boolean
//   text         String? @db.VarChar(255)
//   user_id      Int?
//   users        users?  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
// }

// model submissions {
//   id           Int       @id @default(autoincrement())
//   user_id      Int
//   problem_id   Int
//   code         String
//   lang         String    @db.VarChar(10)
//   total_tests  Int
//   tests_passed Int
//   tests        Json      @db.Json
//   marks        Float
//   timestamp    DateTime? @default(now()) @db.Timestamp(6)
// }

model User {
  id           Int       @id @default(autoincrement())
  fullname     String    @db.VarChar(100)
  email        String    @unique @db.VarChar(100)
  roll         String?   @db.VarChar(12)
  googleUID   String    @unique @db.VarChar(30)
  photoURL    String    @db.VarChar(255)
  registeredAt DateTime? @default(now()) @db.Timestamp(6)
  lastLoginAt  DateTime? @db.Timestamp(6)
  username     String?   @unique @db.VarChar(30)
  files        Files[]
}

model Files {
  id           Int       @id @default(autoincrement())
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  fileName     String
  content      String
  lang         String
  lastModified DateTime? @db.Timestamp(6)
}
